package gserver;

option optimize_for = SPEED;
option java_package = "com.katesoft.gserver.commands";
option java_outer_classname = "Commands";
//
message MessageHeaders {
	required string correlationID = 1;
	required int64 sequenceNumber = 2;
	required int64 messageTimestamp = 3;
}

message BaseCommand {
	extensions 100 to max;
	required string qualifier = 1;
	required MessageHeaders headers = 2;
	required string protocolVersion = 3;
	optional string sessionId = 4;
	optional bool debug = 5;
}

message UnknownCommadException {
	extend BaseCommand {
		required UnknownCommadException cmd = 100;
	}
	required BaseCommand req = 1;
	optional string game = 2;
}

message LoginCommand {
	extend BaseCommand {
		required LoginCommand cmd = 101;
	}
	required string playerId = 1;
	required string credentials = 2;
	required string clientPlatform = 3;
	optional string lang = 4;
	optional string sessionId = 5;
}

message LoginCommandReply {
	extend BaseCommand {
		required LoginCommandReply cmd = 102;
	}
	required LoginCommand req = 1;
}

message OpenGamePlayCommand {
	extend BaseCommand {
		required OpenGamePlayCommand cmd = 103;
	}
	required string gameId = 1;
}

message OpenGamePlayReply {
	extend BaseCommand {
		required OpenGamePlayReply cmd = 104;
	}
	required OpenGamePlayCommand req = 1;
	required string sessionId = 2;
}

message CloseGamePlayAndLogoutCommand {
	extend BaseCommand {
		required CloseGamePlayAndLogoutCommand cmd = 105;
	}
}

message UpdatePlayerSettingsCommand {
	extend BaseCommand {
		required UpdatePlayerSettingsCommand cmd = 106;
	}
	optional string displayName = 1;
	optional string prefLang = 2;
	optional string prefCurrency = 3;
	optional string disableMusic = 4;
	optional string disableBackgroundSounds = 5;
}

enum Coin {
	ONE = 1;
	TWO = 2;
	FIVE = 3;
	TEN = 4;
	TWENTY_FIVE = 5;
	FIFTY = 6;
	HUNDRED = 7;
}

message CoinQuantitySlice {
	required Coin coin = 1;
	required int32 quantity = 2;
}

message Bet {
	repeated CoinQuantitySlice slices = 1;
}

message BetResult {
	required Bet bet = 1;
	required bool win = 2;
	required int32 amountUnsigned = 3;
}

message BetLimit {
	extensions 10 to 100;
	required int32 minBet = 1;
	required int32 maxBet = 2;
}

