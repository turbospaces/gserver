package gserver;

option optimize_for = SPEED;
option java_package = "com.katesoft.gserver.domain";
option java_outer_classname = "Entities";

message i18n {
	required string key = 1;
	required string value = 2;
}

//
// define most commonly used coins
//
enum Coin {
	ONE = 1;
	TWO = 2;
	FIVE = 3;
	TEN = 4;
	TWENTY_FIVE = 5;
	FIFTY = 6;
	HUNDRED = 7;
	FIVE_HUNDRED = 8;
	THOUSAND = 9;
	TEN_THOUSANDS = 10;
}
//
// coin + quantity
//
message CoinQuantitySlice {
	required Coin coin = 1;
	required int32 quantity = 2;
}

message Coins {
	repeated Coin coins = 1;
}
//
// array of coin slices
//
message Bet {
	repeated CoinQuantitySlice slices = 1;
}
//
// return result of bet (win, lose, unsigned amount)
//
message BetResult {
	required Bet bet = 1;
	required bool win = 2;
	required int32 amountUnsigned = 3;
}
//
// define minimal bet amount and maximum bet amount.
//
message BetLimits {
	extensions 10 to 100;
	required int32 minBet = 1;
	required int32 maxBet = 2;
}
//
// commons player settings
//
message PlayerSettings {
	optional string displayName = 1;
	optional string prefLang = 2;
	optional string payoutCurrency = 3;
	optional string disableMusic = 4;
	optional string disableBackgroundSounds = 5;
}
//
// server settings.
// 1) tcp-send-buffer size in bytes (netty optimization)
// 2) tcp-receive-buffer size in bytes (netty optimization)
// 3) tcp-socket-linger (netty socket settings)
// x) tcp-sockets bind address (which host and port to use for direct TCP persistent connections).
// x) flash-sockets bind address (which host and port to use for flash persistent connections).
// x) web-sockets bind address (which host and port to use for flash persistent connections).
//
message ServerSettings {
	optional int32 tcpSendBufferSize = 1 [default = 1048576];
	optional int32 tcpReceiveBufferSize = 2 [default = 1048576];
	optional int32 tcpSocketLinger = 3 [default = 2048];
	optional string tcpBindAddress = 6 [default = '0.0.0.0:8190' ];
	optional string websocketsBindAddress = 7 [default = '0.0.0.0:8191'];
	optional string flashBindAddress = 8 [default = '0.0.0.0:8192'];

	// how long generated websockets login token to be valid.
	// by default valid for 30 minutes.
	optional int32 websocketLoginTokenExpiration = 4 [default = 108000];
	// password to use in order to encrypt generated websockets login token.
	optional string websocketLoginEncryptorPassword = 5 [default = 'wsLoginTokenEncryptor'];
}